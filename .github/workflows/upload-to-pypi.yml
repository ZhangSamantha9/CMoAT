name: Upload Python Package to PyPI

on:
  push:
    branches:
      - master
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get versions from pyproject.toml adn PyPI
        id: get-version
        uses: maybe-hello-world/pyproject-check-version@v4
        with:
          pyproject-path: "./pyproject.toml"
      - name: Check is need update
        id: check-version
        run: |
          echo "Is local higher: ${{ steps.get-version.outputs.local_version_is_higher }}"
          echo "Local version: ${{ steps.get-version.outputs.local_version }}"
          echo "Public version: ${{ steps.get-version.outputs.public_version }}"
      - name: Set up Python
        uses: actions/setup-python@v3
        if: steps.get-version.outputs.local_version_is_higher == 'true'
        with:
          python-version: '3.11'
      - name: Install dependencies
        if: steps.get-version.outputs.local_version_is_higher == 'true'
        run: |
          python -m pip install --upgrade pip setuptools build twine toml
      - name: Build and Publish Package
        if: steps.get-version.outputs.local_version_is_higher == 'true'
        run: |
          python sync_version.py
          python -m build
          python -m twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}